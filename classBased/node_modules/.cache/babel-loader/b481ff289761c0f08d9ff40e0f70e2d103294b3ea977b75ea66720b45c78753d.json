{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Demos\\\\Learning-New\\\\classBased\\\\src\\\\components\\\\UserFinder.js\";\nimport { Fragment, Component } from 'react';\nimport Users from './Users';\nimport classes from './UserFinder.module.css';\nimport UsersContext from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_USERS = [{\n  id: 'u1',\n  name: 'Max'\n}, {\n  id: 'u2',\n  name: 'Manuel'\n}, {\n  id: 'u3',\n  name: 'Julie'\n}];\nclass UserFinder extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: [],\n      searchTerm: ''\n    };\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: DUMMY_USERS.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n  componentDidMount() {\n    //runs only once when the component rendered for the first time , we can write HTTP requestss here \n    this.setState({\n      filteredUsers: this.context.users //here we are loading our data after teh component mounted\n    });\n  }\n  searchChangeHandler(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.finder,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n}\nUserFinder.contextType = UsersContext;\nexport default UserFinder;","map":{"version":3,"names":["Fragment","Component","Users","classes","UsersContext","jsxDEV","_jsxDEV","DUMMY_USERS","id","name","UserFinder","constructor","state","filteredUsers","searchTerm","componentDidUpdate","prevProps","prevState","setState","filter","user","includes","componentDidMount","context","users","searchChangeHandler","event","target","value","render","children","className","finder","type","onChange","bind","fileName","_jsxFileName","lineNumber","columnNumber","contextType"],"sources":["C:/Users/User/Desktop/Demos/Learning-New/classBased/src/components/UserFinder.js"],"sourcesContent":["import { Fragment, Component } from 'react';\r\n\r\nimport Users from './Users';\r\nimport classes from './UserFinder.module.css';\r\nimport UsersContext from './UserContext';\r\nconst DUMMY_USERS = [\r\n  { id: 'u1', name: 'Max' },\r\n  { id: 'u2', name: 'Manuel' },\r\n  { id: 'u3', name: 'Julie' },\r\n];\r\n\r\nclass UserFinder extends Component {\r\n    static contextType = UsersContext;\r\n    constructor(){\r\n        super();\r\n        this.state= {\r\n            filteredUsers: [],\r\n            searchTerm: '',\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevState.searchTerm !== this.state.searchTerm)\r\n        {\r\n            this.setState({\r\n                filteredUsers: DUMMY_USERS.filter((user) => user.name.includes(this.state.searchTerm))\r\n            });\r\n        }\r\n        \r\n    }\r\n    componentDidMount(){\r\n        //runs only once when the component rendered for the first time , we can write HTTP requestss here \r\n        this.setState({\r\n            filteredUsers: this.context.users, //here we are loading our data after teh component mounted\r\n        })\r\n    }\r\n    searchChangeHandler(event){\r\n        this.setState({\r\n            searchTerm: event.target.value\r\n        });\r\n      };\r\n      \r\n      render(){\r\n        return (\r\n            <Fragment>\r\n              <div className={classes.finder}>\r\n                <input type='search' onChange={this.searchChangeHandler.bind(this)} />\r\n              </div>\r\n              <Users users={this.state.filteredUsers} />\r\n            </Fragment>\r\n          );\r\n      }\r\n      \r\n}\r\n\r\n\r\nexport default UserFinder;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,YAAY,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzC,MAAMC,WAAW,GAAG,CAClB;EAAEC,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAM,CAAC,EACzB;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC5B;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,CAC5B;AAED,MAAMC,UAAU,SAAST,SAAS,CAAC;EAE/BU,WAAWA,CAAA,EAAE;IACT,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAE;MACRC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE;IAChB,CAAC;EACL;EACAC,kBAAkBA,CAACC,SAAS,EAAEC,SAAS,EAAC;IACpC,IAAGA,SAAS,CAACH,UAAU,KAAK,IAAI,CAACF,KAAK,CAACE,UAAU,EACjD;MACI,IAAI,CAACI,QAAQ,CAAC;QACVL,aAAa,EAAEN,WAAW,CAACY,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACX,IAAI,CAACY,QAAQ,CAAC,IAAI,CAACT,KAAK,CAACE,UAAU,CAAC;MACzF,CAAC,CAAC;IACN;EAEJ;EACAQ,iBAAiBA,CAAA,EAAE;IACf;IACA,IAAI,CAACJ,QAAQ,CAAC;MACVL,aAAa,EAAE,IAAI,CAACU,OAAO,CAACC,KAAK,CAAE;IACvC,CAAC,CAAC;EACN;EACAC,mBAAmBA,CAACC,KAAK,EAAC;IACtB,IAAI,CAACR,QAAQ,CAAC;MACVJ,UAAU,EAAEY,KAAK,CAACC,MAAM,CAACC;IAC7B,CAAC,CAAC;EACJ;EAEAC,MAAMA,CAAA,EAAE;IACN,oBACIvB,OAAA,CAACN,QAAQ;MAAA8B,QAAA,gBACPxB,OAAA;QAAKyB,SAAS,EAAE5B,OAAO,CAAC6B,MAAO;QAAAF,QAAA,eAC7BxB,OAAA;UAAO2B,IAAI,EAAC,QAAQ;UAACC,QAAQ,EAAE,IAAI,CAACT,mBAAmB,CAACU,IAAI,CAAC,IAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,eACNjC,OAAA,CAACJ,KAAK;QAACsB,KAAK,EAAE,IAAI,CAACZ,KAAK,CAACC;MAAc;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAEjB;AAEN;AAzCM7B,UAAU,CACL8B,WAAW,GAAGpC,YAAY;AA2CrC,eAAeM,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}